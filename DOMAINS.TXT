¿Por qué empezamos por el Dominio?

La Arquitectura Hexagonal dicta que el dominio (las reglas de negocio centrales) debe ser independiente de cualquier framework, base de datos o mecanismo externo. Es el corazón de la aplicación. Construirlo primero asegura que nuestra lógica de negocio no esté acoplada a detalles de infraestructura desde el principio.

¿Qué vamos a crear ahora?

Vamos a crear el modelo de dominio para un User. Este será un objeto Python simple que representa las propiedades y posiblemente algunas reglas básicas de un usuario, sin depender de SQLAlchemy, FastAPI ni RabbitMQ.


¿Qué es?: Es la verdadera esencia del concepto "Usuario" para tu aplicación. Define qué es un usuario y qué reglas lo gobiernan (como validar su email).
¿Dónde vive?: En la capa de Dominio.
¿Dependencias?: Ninguna. No sabe ni que existe una base de datos, ni cómo se guarda. Es código Python puro.
¿Para qué sirve?: Contiene la lógica de negocio central. Es el núcleo que todas las otras capas (Aplicación, Infraestructura) van a usar y respetar.

